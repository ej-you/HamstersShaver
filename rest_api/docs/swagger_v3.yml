components:
  schemas:
    AccountJetton:
      properties:
        balance:
          description: баланс монеты на аккаунте
          example: 326166742480
          type: integer
        beautyBalance:
          description: округлённый баланс
          example: "326.167"
          type: string
        decimals:
          description: decimals монеты
          example: 9
          type: integer
        masterAddress:
          description: мастер-адрес монеты (jetton_master)
          example: 0:b8ef4f77a17e5785bd31ba4da50abd91852f2b8febee97ad6ee16d941f939198
          type: string
        symbol:
          description: символ монеты
          example: GRAM
          type: string
      type: object
    BeautyBalanceOut:
      properties:
        beautyBalance:
          description: преобразованный баланс монеты из int64 формата в округлённый
            float в виде строки
          example: "326.167"
          type: string
      type: object
    BuySendIn:
      properties:
        amount:
          description: кол-во используемых TON для покупки в формате, удобном для
            человека
          example: 0.1
          type: number
        jettonCA:
          description: мастер-адрес покупаемой монеты (jetton_master)
          example: EQC47093oX5Xhb0xuk2lCr2RhS8rj-vul61u4W2UH5ORmG_O
          type: string
        slippage:
          description: процент проскальзывания
          example: 20
          type: integer
      type: object
    BuySendOut:
      properties:
        success:
          example: true
          type: boolean
      type: object
    CellSendIn:
      properties:
        amount:
          description: кол-во используемых монет на продажу в формате, удобном для
            человека
          example: 200
          type: number
        jettonCA:
          description: мастер-адрес продаваемой монеты (jetton_master)
          example: EQC47093oX5Xhb0xuk2lCr2RhS8rj-vul61u4W2UH5ORmG_O
          type: string
        slippage:
          description: процент проскальзывания
          example: 20
          type: integer
      type: object
    CellSendOut:
      properties:
        success:
          description: успех
          example: true
          type: boolean
      type: object
    GetSeqnoOut:
      properties:
        seqno:
          description: порядковый номер версии кошелька аккаунта
          example: 105
          type: integer
      type: object
    JettonParams:
      properties:
        decimals:
          description: decimals монеты
          example: 9
          type: integer
        masterAddress:
          description: мастер-адрес монеты (jetton_master)
          example: EQC47093oX5Xhb0xuk2lCr2RhS8rj-vul61u4W2UH5ORmG_O
          type: string
        priceUsd:
          description: цена монеты в долларах (USD)
          example: 0.002695039717551585
          type: number
        symbol:
          description: символ монеты
          example: GRAM
          type: string
      type: object
    PreRequestBuyJetton:
      properties:
        dex:
          description: название DEX биржи
          example: Stonfi
          type: string
        jettonCA:
          description: мастер-адрес покупаемой монеты (jetton_master)
          example: EQC47093oX5Xhb0xuk2lCr2RhS8rj-vul61u4W2UH5ORmG_O
          type: string
        jettonSymbol:
          description: символ покупаемой монеты
          example: GRAM
          type: string
        jettonsOut:
          description: примерное кол-во монет, которые будут получены после транзакции
          example: "175.137"
          type: string
        minOut:
          description: 'минимальное кол-во покупаемых монет (с учётом процента проскальзывания) '
          example: "140.11"
          type: string
        usedTon:
          description: кол-во используемых TON для покупки в формате, удобном для
            человека
          example: "0.1"
          type: string
      type: object
    PreRequestCellJetton:
      properties:
        dex:
          description: название DEX биржи
          example: Stonfi
          type: string
        jettonCA:
          description: мастер-адрес продаваемой монеты (jetton_master)
          example: EQC47093oX5Xhb0xuk2lCr2RhS8rj-vul61u4W2UH5ORmG_O
          type: string
        jettonSymbol:
          description: символ продаваемой монеты
          example: GRAM
          type: string
        minOut:
          description: минимальное кол-во получаемых монет TON (с учётом процента
            проскальзывания)
          example: "0.091"
          type: string
        tonsOut:
          description: примерное кол-во монет TON, которые будут получены после транзакции
          example: "0.114"
          type: string
        usedJettons:
          description: кол-во используемых монет на продажу в формате, удобном для
            человека
          example: "200.0"
          type: string
      type: object
    TonJetton:
      properties:
        balance:
          description: баланс монеты на аккаунте
          example: 1955532900
          type: integer
        beautyBalance:
          description: округлённый баланс
          example: "1.956"
          type: string
        decimals:
          description: decimals монеты
          example: 9
          type: integer
      type: object
    TransactionInfoWithStatusOK:
      properties:
        action:
          description: действие с монетами в транзакции (покупка/продажа)
          example: buy
          type: string
        bounce:
          description: была ли отклонена операция (не означает успех или неудачу транзакции)
          example: true
          type: boolean
        endBalance:
          description: оставшееся кол-во TON после проведения транзакции
          example: "2.689"
          type: string
        hash:
          description: хэш транзакции
          example: ed79dafdda1a766dc6d7745e8dd03410adf7ba57bb6fccdb33ee5f5d8c3640f4
          type: string
        opName:
          description: название операции транзакции
          example: jetton_notify
          type: string
        statusOK:
          description: успех или неудача выполнения транзакции
          example: true
          type: boolean
      type: object
    myTonapiAccount.AccountJetton:
      properties:
        balance:
          description: баланс монеты на аккаунте
          example: 326166742480
          type: integer
        beautyBalance:
          description: округлённый баланс
          example: "326.167"
          type: string
        decimals:
          description: decimals монеты
          example: 9
          type: integer
        masterAddress:
          description: мастер-адрес монеты (jetton_master)
          example: 0:b8ef4f77a17e5785bd31ba4da50abd91852f2b8febee97ad6ee16d941f939198
          type: string
        symbol:
          description: символ монеты
          example: GRAM
          type: string
      type: object
  securitySchemes:
    APIKey:
      in: query
      name: api-key
      type: apiKey
info:
  description: RESTful API for TON API interaction written on Golang using "Stonfi"
    API, SDK "tonapi-go" and SDK "tongo". All resources is protected with api-key
    in query.
  title: RESTful API for TON API interaction
  version: 1.0.0
openapi: 3.0.0
paths:
  /account/get-jetton:
    get:
      description: ' Get jetton balance on account and other info about jetton by
        it master address'
      parameters:
      - description: мастер-адрес монеты (jetton_master)
        example: EQC47093oX5Xhb0xuk2lCr2RhS8rj-vul61u4W2UH5ORmG_O
        in: query
        name: MasterAddress
        required: true
        schema:
          description: мастер-адрес монеты (jetton_master)
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountJetton'
          description: AccountJetton JSON
      summary: Get jetton balance on account
      tags:
      - account
  /account/get-jettons:
    get:
      description: ' Get all non-null jettons balances on account and other info about
        jettons'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccountJetton'
                type: array
          description: AccountJettons list JSON
      summary: Get jettons balances on account
      tags:
      - account
  /account/get-seqno:
    get:
      description: ' Get account seqno'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSeqnoOut'
          description: Account seqno
      summary: Get account seqno
      tags:
      - account
  /account/get-ton:
    get:
      description: ' Get TON balance on account and other info about TON'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TonJetton'
          description: Account TON info
      summary: Get TON balance on account
      tags:
      - account
  /jettons/get-info:
    get:
      description: ' Get jetton info from Stonfi API by it master address'
      parameters:
      - description: мастер-адрес монеты (jetton_master)
        example: EQC47093oX5Xhb0xuk2lCr2RhS8rj-vul61u4W2UH5ORmG_O
        in: query
        name: MasterAddress
        required: true
        schema:
          description: мастер-адрес монеты (jetton_master)
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JettonParams'
          description: JettonParams JSON
      summary: Get jetton info
      tags:
      - jettons
  /services/beauty-balance:
    get:
      description: ' Convert raw balance (in int64 forman) into beauty balance (rounded
        float in string format)'
      parameters:
      - description: баланс монеты в int64 формате
        example: "326166742480"
        in: query
        name: RawBalance
        required: true
        schema:
          description: баланс монеты в int64 формате
          format: int64
          type: integer
      - description: decimals монеты
        example: "9"
        in: query
        name: Decimals
        required: true
        schema:
          description: decimals монеты
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeautyBalanceOut'
          description: BeautyBalance value
      summary: Convert raw balance into beauty balance
      tags:
      - services
  /transactions/buy/pre-request:
    get:
      description: ' Get pre-request info about buy transaction'
      parameters:
      - description: мастер-адрес покупаемой монеты (jetton_master)
        example: EQC47093oX5Xhb0xuk2lCr2RhS8rj-vul61u4W2UH5ORmG_O
        in: query
        name: JettonCA
        required: true
        schema:
          description: мастер-адрес покупаемой монеты (jetton_master)
          format: string
          type: string
      - description: кол-во используемых TON для покупки в формате, удобном для человека
        example: "0.1"
        in: query
        name: Amount
        required: true
        schema:
          description: кол-во используемых TON для покупки в формате, удобном для
            человека
          format: double
          type: number
      - description: процент проскальзывания
        example: "20"
        in: query
        name: Slippage
        required: true
        schema:
          description: процент проскальзывания
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreRequestBuyJetton'
          description: PreRequestBuyJetton JSON
      summary: Buy pre-request
      tags:
      - transactions
  /transactions/buy/send:
    post:
      description: ' Send transaction to buy jettons using TON'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuySendIn'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuySendOut'
          description: Transaction was sent successfully
      summary: Buy send
      tags:
      - transactions
  /transactions/cell/pre-request:
    get:
      description: ' Get pre-request info about cell transaction'
      parameters:
      - description: мастер-адрес продаваемой монеты (jetton_master)
        example: EQC47093oX5Xhb0xuk2lCr2RhS8rj-vul61u4W2UH5ORmG_O
        in: query
        name: JettonCA
        required: true
        schema:
          description: мастер-адрес продаваемой монеты (jetton_master)
          format: string
          type: string
      - description: кол-во используемых монет на продажу в формате, удобном для человека
        example: "200"
        in: query
        name: Amount
        required: true
        schema:
          description: кол-во используемых монет на продажу в формате, удобном для
            человека
          format: double
          type: number
      - description: процент проскальзывания
        example: "20"
        in: query
        name: Slippage
        required: true
        schema:
          description: процент проскальзывания
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreRequestCellJetton'
          description: PreRequestCellJetton JSON
      summary: Cell pre-request
      tags:
      - transactions
  /transactions/cell/send:
    post:
      description: ' Send transaction to cell jettons to TON'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CellSendIn'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CellSendOut'
          description: Transaction was sent successfully
      summary: Cell send
      tags:
      - transactions
  /transactions/info:
    get:
      description: ' Get transaction info by given its hash and action (buy OR cell)'
      parameters:
      - description: хэш транзакции
        example: 29a301e4d2a05713f4eab6c8f0daa3c58eed15d1d41678068cd50fe46ca7f6a5
        in: query
        name: TransactionHash
        required: true
        schema:
          description: хэш транзакции
          format: string
          type: string
      - description: действие с монетами в транзакции (покупка/продажа)
        example: cell
        in: query
        name: Action
        required: true
        schema:
          description: действие с монетами в транзакции (покупка/продажа)
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionInfoWithStatusOK'
          description: TransactionInfoWithStatusOK JSON
      summary: Transaction info
      tags:
      - transactions
security:
- APIKey: []
servers:
- description: ' Remote server'
  url: http://150.241.82.68:8000/api
- description: ' Local machine'
  url: http://127.0.0.1:8000/api
