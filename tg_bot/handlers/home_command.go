package handlers

import (
	"fmt"
	"time"

	telebot "gopkg.in/telebot.v3"

	apiClient "github.com/ej-you/HamstersShaver/tg_bot/api_client"
	stateMachine "github.com/ej-you/HamstersShaver/tg_bot/state_machine"
	"github.com/ej-you/HamstersShaver/tg_bot/keyboards"
	"github.com/ej-you/HamstersShaver/tg_bot/services"
)


// –∫–æ–º–∞–Ω–¥—ã: /home || /cancel
// –∫–Ω–æ–ø–∫–∏: to_home
func HomeHandler(context telebot.Context) error {
	var err error
	userId := services.GetUserID(context.Chat())

	// –ø–æ–ª—É—á–µ–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏—é —Ç–µ–∫—É—â–µ–≥–æ —é–∑–µ—Ä–∞
	userStateMachine := stateMachine.UserStateMachines.Get(userId)
	// —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
	if err = userStateMachine.SetStatus("home"); err != nil {
		return fmt.Errorf("HomeHandler for user %s: %w", userId, err)
	}
	// –æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –¥–ª—è –Ω–æ–≤–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
	if err = userStateMachine.ClearNewTransactionPreparation(); err != nil {
		return fmt.Errorf("HomeHandler for user %s: %w", userId, err)
	}

	// –ø–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ TON —É –∞–∫–∫–∞—É–Ω—Ç–∞
	var TONAccountInfo apiClient.TONInfo
	err = apiClient.GetRequest("/api/account/get-ton", nil, &TONAccountInfo, 5*time.Second)
	if err != nil {
		return fmt.Errorf("HomeHandler for user %s: %w", userId, err)
	}

	// –ø–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –∫—É—Ä—Å–∞ TON –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö
	var TONJettonInfo apiClient.JettonInfo
	getTONJettonInfoParams := apiClient.QueryParams{Params: map[string]string{"MasterAddress": "EQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM9c"}}
	err = apiClient.GetRequest("/api/jettons/get-info", &getTONJettonInfoParams, &TONJettonInfo, 5*time.Second)
	if err != nil {
		return fmt.Errorf("HomeHandler for user %s: %w", userId, err)
	}

	msgText := fmt.Sprintf(`–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å TON: %s 
üíµ –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å TON: %.2f$

‚ùóÔ∏è–î–ª—è —Å–ø—Ä–∞–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help`,
	TONAccountInfo.BeautyBalance, TONJettonInfo.PriceUSD)

	return context.Send(msgText, keyboards.InlineKeyboardMainMenu)
}
