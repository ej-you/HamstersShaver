package cell
// –Ω–æ–º–µ—Ä –≤ –¥–∏–∞–ª–æ–≥–µ: 0

import (
	"fmt"

	telebot "gopkg.in/telebot.v3"

	"github.com/ej-you/HamstersShaver/tg_bot/keyboards"
	"github.com/ej-you/HamstersShaver/tg_bot/services"
	stateMachine "github.com/ej-you/HamstersShaver/tg_bot/state_machine"
)


// –∫–æ–º–∞–Ω–¥—ã: /cell
func CellHandlerCommand(context telebot.Context) error {
	var err error

	// –ø–æ–ª—É—á–µ–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π —Ç–µ–∫—É—â–µ–≥–æ —é–∑–µ—Ä–∞
	userStateMachine := stateMachine.UserStateMachines.Get(services.GetUserID(context.Chat()))
	// —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
	if err = userStateMachine.SetStatus("cell"); err != nil {
		return fmt.Errorf("CellHandlerCommand: %w", err)
	}
	// —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
	if err = userStateMachine.SetAction("cell"); err != nil {
		return fmt.Errorf("CellHandlerCommand: %w", err)
	}

	msgText := `üìâ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–∏–∞–ª–æ–≥ –ø—Ä–æ–¥–∞–∂–∏ –º–æ–Ω–µ—Ç. –î–ª—è –æ—Ç–º–µ–Ω—ã –≤—Å–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏ –≤—ã—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel

–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –∏–º–µ—é—â–∏—Ö—Å—è —É –≤–∞—Å –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–µ –º–æ–Ω–µ—Ç —Ç—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å üëá`

	// –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–µ–∫—É—â–∏–º —Å–ø–∏—Å–∫–æ–º –º–æ–Ω–µ—Ç –Ω–∞ –∫–æ—à–µ–ª—å–∫–µ –∞–∫–∫–∞—É–Ω—Ç–∞
	err = keyboards.SetWalletJettonsButtons()
	if err != nil {
		return fmt.Errorf("CellHandlerCommand: %w", err)
	}
	return context.Send(msgText, keyboards.InlineKeyboardWalletJettons)
}


// –∫–Ω–æ–ø–∫–∏: to_cell
func CellHandlerCallback(context telebot.Context) error {
	var err error

	// –ø–æ–ª—É—á–µ–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏—é —Ç–µ–∫—É—â–µ–≥–æ —é–∑–µ—Ä–∞
	userStateMachine := stateMachine.UserStateMachines.Get(services.GetUserID(context.Chat()))
	// —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
	if err = userStateMachine.SetStatus("cell"); err != nil {
		return fmt.Errorf("CellHandlerCommand: %w", err)
	}
	// —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
	if err = userStateMachine.SetAction("cell"); err != nil {
		return fmt.Errorf("CellHandlerCommand: %w", err)
	}

	msgText := `–•–æ—Ä–æ—à–æ. –í—ã–±—Ä–∞–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–æ–¥–∞–∂–∏ –º–æ–Ω–µ—Ç üìâ

–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –∏–º–µ—é—â–∏—Ö—Å—è —É –≤–∞—Å –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–µ –º–æ–Ω–µ—Ç —Ç—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å üëá`

	// –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–µ–∫—É—â–∏–º —Å–ø–∏—Å–∫–æ–º –º–æ–Ω–µ—Ç –Ω–∞ –∫–æ—à–µ–ª—å–∫–µ –∞–∫–∫–∞—É–Ω—Ç–∞
	err = keyboards.SetWalletJettonsButtons()
	if err != nil {
		return fmt.Errorf("CellHandlerCommand: %w", err)
	}
	return context.Send(msgText, keyboards.InlineKeyboardWalletJettons)
}
