package cell
// –Ω–æ–º–µ—Ä –≤ –¥–∏–∞–ª–æ–≥–µ: 1

import (
	"fmt"

	telebot "gopkg.in/telebot.v3"

	stateMachine "github.com/ej-you/HamstersShaver/tg_bot/state_machine"
	"github.com/ej-you/HamstersShaver/tg_bot/keyboards"
	"github.com/ej-you/HamstersShaver/tg_bot/services"
)


// –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –º–æ–Ω–µ—Ç—ã –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –≤ –¥–∏–∞–ª–æ–≥–µ –∫–æ–º–∞–Ω–¥—ã /cell
func CellChooseDEXHandler(context telebot.Context) error {
	var err error

	// –ø–æ–ª—É—á–µ–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π —Ç–µ–∫—É—â–µ–≥–æ —é–∑–µ—Ä–∞
	userStateMachine := stateMachine.UserStateMachines.Get(services.GetUserID(context.Chat()))
	// —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
	if err = userStateMachine.SetStatus("cell_dex"); err != nil {
		return fmt.Errorf("CellChooseDEXHandler: %w", err)
	}
	// —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è CA –º–æ–Ω–µ—Ç—ã
	if err = userStateMachine.SetJettonCA(context.Callback().Data); err != nil {
		return fmt.Errorf("CellHandlerCommand: %w", err)
	}

	return context.Send("ü™ô –û—Ç–ª–∏—á–Ω–æ! –ú–æ–Ω–µ—Ç–∞ –≤—ã–±—Ä–∞–Ω–∞. –í—ã–±–µ—Ä–∏—Ç–µ DEX-–±–∏—Ä–∂—É üëá", keyboards.InlineKeyboardChooseDEX)
}
