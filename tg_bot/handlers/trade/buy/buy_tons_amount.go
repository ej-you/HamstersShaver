package buy
// –Ω–æ–º–µ—Ä –≤ –¥–∏–∞–ª–æ–≥–µ: 1

import (
	"fmt"

	telebot "gopkg.in/telebot.v3"

	stateMachine "github.com/ej-you/HamstersShaver/tg_bot/state_machine"
	"github.com/ej-you/HamstersShaver/tg_bot/services"
)


func BuyTonsAmountHandler(context telebot.Context) error {
	var err error
	userId := services.GetUserID(context.Chat())

	// –ø–æ–ª—É—á–µ–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π —Ç–µ–∫—É—â–µ–≥–æ —é–∑–µ—Ä–∞
	userStateMachine := stateMachine.UserStateMachines.Get(userId)
	// —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
	if err = userStateMachine.SetStatus("buy_tons_amount"); err != nil {
		return fmt.Errorf("BuyTonsAmountHandler for user %s: %w", userId, err)
	}

	// –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π DEX-–±–∏—Ä–∂–∏
	chosenDex := services.GetCallbackData(context.Callback())
	// —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è DEX-–±–∏—Ä–∂–∏
	if err = userStateMachine.SetDEX(chosenDex); err != nil {
		return fmt.Errorf("BuyTonsAmountHandler for user %s: %w", userId, err)
	}

	// –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
	if chosenDex == "stonfi" {
		chosenDex = "Ston.fi"
	} else if chosenDex == "dedust" {
		chosenDex = "Dedust.io"
	}

	msgText := fmt.Sprintf(`üíπ –í—ã–±—Ä–∞–Ω–Ω–∞—è –±–∏—Ä–∂–∞ - %s

–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö TON —Å –∫–æ—à–µ–ª—å–∫–∞ (—á–∏—Å–ª–æ –±–æ–ª—å—à–µ 0) –∏–ª–∏ –∏—Ö –ø—Ä–æ—Ü–µ–Ω—Ç (—á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100 —Å %% –Ω–∞ –∫–æ–Ω—Ü–µ)`, chosenDex)

	return context.Send(msgText)
}
