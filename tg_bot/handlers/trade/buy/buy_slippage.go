package buy
// –Ω–æ–º–µ—Ä –≤ –¥–∏–∞–ª–æ–≥–µ: 2

import (
	"fmt"
	"strings"

	telebot "gopkg.in/telebot.v3"

	apiClient "github.com/ej-you/HamstersShaver/tg_bot/api_client"
	stateMachine "github.com/ej-you/HamstersShaver/tg_bot/state_machine"
	"github.com/ej-you/HamstersShaver/tg_bot/keyboards"
	"github.com/ej-you/HamstersShaver/tg_bot/services"
)


func BuySlippageHandler(context telebot.Context) error {
	var err error

	// –ø–∞—Ä—Å–∏–Ω–≥ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Å—Ç—Ä–æ–∫–∏, –≤–≤–µ–¥—ë–Ω–Ω–æ–π —é–∑–µ—Ä–æ–º
	tonsAmount, err := services.ParseJettonsAmount(apiClient.TONMasterAddress, strings.TrimSpace(context.Message().Text))
	if err != nil {
		return fmt.Errorf("BuySlippageHandler: %w", err)
	}

	// –ø–æ–ª—É—á–µ–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π —Ç–µ–∫—É—â–µ–≥–æ —é–∑–µ—Ä–∞
	userStateMachine := stateMachine.UserStateMachines.Get(services.GetUserID(context.Chat()))
	// —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
	if err = userStateMachine.SetStatus("buy_slippage"); err != nil {
		return fmt.Errorf("BuySlippageHandler: %w", err)
	}
	// —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ TON
	if err = userStateMachine.SetJettonsAmount(tonsAmount); err != nil {
		return fmt.Errorf("BuySlippageHandler: %w", err)
	}

	msgText := fmt.Sprintf(`ü´∞ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö TON: %s

–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–æ—Å–∫–∞–ª—å–∑—ã–≤–∞–Ω–∏—è –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ üëá`, tonsAmount)

	return context.Send(msgText, keyboards.InlineKeyboardSlippageChoices)
}
