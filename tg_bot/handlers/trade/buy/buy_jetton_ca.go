package buy
// –Ω–æ–º–µ—Ä –≤ –¥–∏–∞–ª–æ–≥–µ: 3

import (
	"fmt"
	"strings"

	telebot "gopkg.in/telebot.v3"

	stateMachine "github.com/ej-you/HamstersShaver/tg_bot/state_machine"
	"github.com/ej-you/HamstersShaver/tg_bot/services"
)


// –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –º–æ–Ω–µ—Ç—ã –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –≤ –¥–∏–∞–ª–æ–≥–µ –∫–æ–º–∞–Ω–¥—ã /cell
func BuyJettonCAHandler(context telebot.Context) error {
	var err error
	var stringSlippage string

	// –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ü–µ–Ω—Ç–∞
	if context.Callback() != nil {
		callbackData := services.GetCallbackData(context.Callback())
		// –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –ª–µ–≤–∞—è –∫–Ω–æ–ø–∫–∞ (–Ω–µ —Å –≤—ã–±–æ—Ä–æ–º –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –ø—Ä–æ—Å–∫–∞–ª—å–∑—ã–≤–∞–Ω–∏—è)		
		if !strings.HasPrefix(callbackData, "slippage_choice") {
			return nil
		}
		// –¥–æ—Å—Ç–∞—ë–º –ø—Ä–æ—Ü–µ–Ω—Ç –∏–∑ –¥–∞–Ω–Ω—ã—Ö –∫–Ω–æ–ø–∫–∏
		stringSlippage = strings.TrimPrefix(callbackData, "slippage_choice|")
	// –µ—Å–ª–∏ –ø—Ä–æ—Ü–µ–Ω—Ç –≤–≤–µ–¥—ë–Ω —Ç–µ–∫—Å—Ç–æ–º
	} else {
		// –ø–∞—Ä—Å–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –ø—Ä–æ—Å–∫–∞–ª—å–∑—ã–≤–∞–Ω–∏—è –∏–∑ —Å—Ç—Ä–æ–∫–∏ (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ)
		stringSlippage, err = services.ParseSlippageAmount(strings.TrimSpace(context.Message().Text))
		if err != nil {
			return fmt.Errorf("BuyJettonCAHandler: %w", err)
		}
	}

	// –ø–æ–ª—É—á–µ–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π —Ç–µ–∫—É—â–µ–≥–æ —é–∑–µ—Ä–∞
	userStateMachine := stateMachine.UserStateMachines.Get(services.GetUserID(context.Chat()))
	// —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
	if err = userStateMachine.SetStatus("buy_jetton_ca"); err != nil {
		return fmt.Errorf("BuyJettonCAHandler: %w", err)
	}
	// —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –ø—Ä–æ—Å–∫–∞–ª—å–∑—ã–≤–∞–Ω–∏—è
	if err = userStateMachine.SetSlippage(stringSlippage); err != nil {
		return fmt.Errorf("BuyJettonCAHandler: %w", err)
	}

	return context.Send(fmt.Sprintf("üôÇ‚Äç‚ÜîÔ∏è –ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–æ—Å–∫–∞–ª—å–∑—ã–≤–∞–Ω–∏—è: %s%% \n\n–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –ø–æ–∫—É–ø–∞–µ–º–æ–π –º–æ–Ω–µ—Ç—ã", stringSlippage))
}
